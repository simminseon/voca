{"version":3,"sources":["component/Header.js","hooks/useFecth.ts","component/DayList.tsx","component/Word.tsx","component/Day.tsx","component/CreateWord.tsx","component/CreateDay.tsx","component/EmptyPage.js","component/DeleteDay.tsx","VocaApp.jsx","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","useFetch","url","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","fetch","then","res","json","DayList","days","length","Fragment","map","day","key","id","concat","Word","_ref","w","word","setWords","console","log","_useState3","_useState4","isShow","setIsShow","_useState5","isDone","_useState6","setIsDone","type","onChange","method","headers","Content-Type","body","JSON","stringify","objectSpread","ok","checked","eng","kor","onClick","window","confirm","Day","useParams","words","CreateWord","isLoading","setIsLoading","engRef","useRef","korRef","dayRef","navigate","useNavigate","onSubmit","e","preventDefault","current","value","alert","placeholder","ref","style","opacity","CreateDay","EmptyPage","DeleteDay","background","selectedDay","filter","onClickDelete","VocaApp","basename","process","react_router","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_VocaApp"],"mappings":"6LAGe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAI,CAACC,GAAG,KAAI,kDAEfL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACE,EAAA,EAAI,CAACC,GAAG,cAAcF,UAAU,QAAO,6BAGxCH,EAAAC,EAAAC,cAACE,EAAA,EAAI,CAACC,GAAG,aAAaF,UAAU,QAAO,oBAGvCH,EAAAC,EAAAC,cAACE,EAAA,EAAI,CAACC,GAAG,aAAaF,UAAU,QAAO,iCCdhC,SAASG,EAASC,GAAa,IAAAC,EACpBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAYpB,OAVAK,oBAAU,WACRC,MAAMT,GACHU,KAAK,SAACC,GACL,OAAOA,EAAIC,SAEZF,KAAK,SAACJ,GACLC,EAAQD,MAEX,CAACN,IAEGM,ECNM,SAASO,IACtB,IAAMC,EAAef,EAAS,8BAE9B,OAAoB,IAAhBe,EAAKC,OACAtB,EAAAC,EAAAC,cAAA,YAAM,cAIbF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXkB,EAAKG,IAAI,SAACC,GAAG,OACZzB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKD,EAAIE,IACX3B,EAAAC,EAAAC,cAACE,EAAA,EAAI,CAACC,GAAE,SAAAuB,OAAWH,EAAIA,MAAO,OAAKA,EAAIA,4BCNpC,SAASI,EAAIC,GAAsB,IAAbC,EAACD,EAAPE,KAC7BxB,EACyBC,mBAASsB,GAAErB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BwB,EAAItB,EAAA,GAAEuB,EAAQvB,EAAA,GACrBwB,QAAQC,IAAIH,GAAM,IAAAI,EACU3B,oBAAS,GAAM4B,EAAA1B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAAAG,EACI/B,mBAASuB,EAAKS,QAAOC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GAA1CC,EAAMC,EAAA,GAAEC,EAASD,EAAA,GAoBxBR,QAAQC,IAAIH,GAqBZ,OAAgB,IAAZA,EAAKL,GACA,KAIP3B,EAAAC,EAAAC,cAAA,MAAIC,UAAWsC,EAAS,MAAQ,IAC9BzC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAO0C,KAAK,WAAWC,SA5CV,WACjB7B,MAAK,+BAAAY,OAAgCI,EAAKL,IAAM,CAC9CmB,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUxC,OAAAyC,EAAA,EAAAzC,CAAA,GAChBqB,EAAI,CACPS,QAASA,OAEVxB,KAAK,SAACC,GACHA,EAAImC,IACNV,GAAWF,MAgCkCa,QAASb,KAExDzC,EAAAC,EAAAC,cAAA,UAAK8B,EAAKuB,KACVvD,EAAAC,EAAAC,cAAA,UAAKoC,GAAUN,EAAKwB,KAEpBxD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQuD,QArDK,WACjBlB,GAAWD,KAoDuBA,EAAS,qBAAQ,sBAC/CtC,EAAAC,EAAAC,cAAA,UAAQuD,QAjCQ,WAChBC,OAAOC,QAAQ,uDACjB3C,MAAK,+BAAAY,OAAgCI,EAAKL,IAAM,CAC9CmB,OAAQ,WAEP7B,KAAK,SAACC,GACL,OAAOA,EAAIC,SAEZF,KAAK,SAACC,GACDA,EAAImC,IACNpB,EAAStB,OAAAyC,EAAA,EAAAzC,CAAA,GACJqB,EAAI,CACPL,GAAI,QAqBsBxB,UAAU,WAAU,kBCtE7C,SAASyD,IAAM,IACpBnC,EAAQoC,cAARpC,IACFqC,EAAiBxD,EAAQ,mCAAAsB,OAAoCH,IACnE,OACEzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAAA,UAAI,OAAKuB,GACTzB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACG4D,EAAMtC,IAAI,SAACQ,GAAI,OACdhC,EAAAC,EAAAC,cAAC2B,EAAI,CAACG,KAAMA,EAAMN,IAAKM,EAAKL,UCTzB,SAASoC,IACtB,IAAM1C,EAAef,EAAS,8BAA8BE,EAC1BC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA1CwD,EAAStD,EAAA,GAAEuD,EAAYvD,EAAA,GACxBwD,EAASC,iBAAyB,MAClCC,EAASD,iBAAyB,MAClCE,EAASF,iBAA0B,MACnCG,EAAWC,cAiCjB,OACEvE,EAAAC,EAAAC,cAAA,QAAMsE,SAhCS,SAACC,GAGhB,GAFAA,EAAEC,kBAEGV,GAAaK,EAAOM,SAAWT,EAAOS,SAAWP,EAAOO,QAAS,CACpEV,GAAa,GAEb,IAAMxC,EAAM4C,EAAOM,QAAQC,MACrBrB,EAAMW,EAAOS,QAAQC,MACrBpB,EAAMY,EAAOO,QAAQC,MAE3B5D,MAAM,8BAA+B,CACnC8B,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB1B,MACA8B,MACAC,MACAf,QAAQ,MAETxB,KAAK,SAACC,GACHA,EAAImC,KACNwB,MAAM,mEACNP,EAAQ,QAAA1C,OAASH,IACjBwC,GAAa,SAQjBjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aAAO,OACPF,EAAAC,EAAAC,cAAA,SAAO0C,KAAK,OAAOkC,YAAY,WAAWC,IAAKb,KAEjDlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aAAO,OACPF,EAAAC,EAAAC,cAAA,SAAO0C,KAAK,OAAOkC,YAAY,qBAAMC,IAAKX,KAE5CpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aAAO,OACPF,EAAAC,EAAAC,cAAA,UAAQ6E,IAAKV,GACVhD,EAAKG,IAAI,SAACC,GAAG,OACZzB,EAAAC,EAAAC,cAAA,UAAQwB,IAAKD,EAAIE,GAAIiD,MAAOnD,EAAIA,KAC7BA,EAAIA,SAKbzB,EAAAC,EAAAC,cAAA,UAAQ8E,MAAO,CAAEC,QAASjB,EAAY,GAAM,IACzCA,EAAY,SAAW,iBC5DjB,SAASkB,IACtB,IAAM7D,EAAef,EAAS,8BACxBgE,EAAWC,cAoBjB,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAI,gCAAUmB,EAAKC,OAAO,UAC1BtB,EAAAC,EAAAC,cAAA,UAAQuD,QArBI,WACdzC,MAAM,6BAA8B,CAClC8B,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB1B,IAAKJ,EAAKC,OAAS,MAEpBL,KAAK,SAACC,GACHA,EAAImC,KACNwB,MAAM,mEACNP,EAAQ,QAGZpC,QAAQC,IAAId,KAMgB,qBC5BjB,SAAS8D,IACtB,OACEnF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAAA,UAAI,sDACJF,EAAAC,EAAAC,cAACE,EAAA,EAAI,CAACC,GAAG,KAAI,6BCDJ,SAAS+E,IACtB,IAAM/D,EAAef,EAAS,8BACxBgE,EAAWC,cAoBjB,OACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXkB,EAAKG,IAAI,SAACC,GAAG,OACZzB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKD,EAAIE,IACX3B,EAAAC,EAAAC,cAAA,UACE8E,MAAO,CAAEK,WAAY,OACrB5B,QAAS,kBAzBC,SAAChC,GACrB,IAAM6D,EAAcjE,EAAKkE,OAAO,SAAC1E,GAC/B,OAAOA,EAAKc,KAAOF,EAAIE,KAGzBX,MAAK,8BAAAY,OAA+BH,EAAIE,IAAM,CAC5CmB,OAAQ,SACRG,KAAMC,KAAKC,UAAU,CACnB1B,IAAK6D,MAENrE,KAAK,SAACC,GACHA,EAAImC,KACNwB,MAAM,8BACNP,EAAQ,QAYakB,CAAc/D,KAC9B,OACMA,EAAIA,gBCTRgE,MAhBf,WACE,OACEzF,EAAAC,EAAAC,cAACE,EAAA,EAAa,CAACsF,SAAUC,SACvB3F,EAAAC,EAAAC,cAACH,EAAM,MACPC,EAAAC,EAAAC,cAAC0F,EAAA,EAAM,KACL5F,EAAAC,EAAAC,cAAC0F,EAAA,EAAK,CAACC,KAAK,IAAIC,QAAS9F,EAAAC,EAAAC,cAACkB,EAAO,QACjCpB,EAAAC,EAAAC,cAAC0F,EAAA,EAAK,CAACC,KAAK,YAAYC,QAAS9F,EAAAC,EAAAC,cAAC0D,EAAG,QACrC5D,EAAAC,EAAAC,cAAC0F,EAAA,EAAK,CAACC,KAAK,cAAcC,QAAS9F,EAAAC,EAAAC,cAAC6D,EAAU,QAC9C/D,EAAAC,EAAAC,cAAC0F,EAAA,EAAK,CAACC,KAAK,aAAaC,QAAS9F,EAAAC,EAAAC,cAACgF,EAAS,QAC5ClF,EAAAC,EAAAC,cAAC0F,EAAA,EAAK,CAACC,KAAK,aAAaC,QAAS9F,EAAAC,EAAAC,cAACkF,EAAS,QAC5CpF,EAAAC,EAAAC,cAAC0F,EAAA,EAAK,CAACC,KAAK,IAAIC,QAAS9F,EAAAC,EAAAC,cAACiF,EAAS,WChB9BY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnG,EAAAC,EAAAC,cAACF,EAAAC,EAAMmG,WAAU,KACfpG,EAAAC,EAAAC,cAACmG,EAAO","file":"static/js/main.c5f85139.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <h1>\n        <Link to=\"/\">토익 영단어(고급)</Link>\n      </h1>\n      <div className=\"menu\">\n        <Link to=\"/createWord\" className=\"link\">\n          단어 추가\n        </Link>\n        <Link to=\"/createDay\" className=\"link\">\n          Day 추가\n        </Link>\n        <Link to=\"/DeleteDay\" className=\"link\">\n          Day 삭제\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useFetch(url: string) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setData(data);\n      });\n  }, [url]);\n\n  return data;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFecth\";\n\nexport interface IDay {\n  day: number;\n  id: number;\n}\n\nexport default function DayList() {\n  const days: IDay[] = useFetch(\"http://localhost:3001/days\");\n\n  if (days.length === 0) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <>\n      <ul className=\"list_day\">\n        {days.map((day) => (\n          <li key={day.id}>\n            <Link to={`./day/${day.day}`}>Day {day.day}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport useFetch from \"../hooks/useFecth\";\n\ninterface IProps {\n  word: IWord;\n}\n\nexport interface IWord {\n  day: string;\n  eng: string;\n  kor: string;\n  isDone: boolean;\n  id: number;\n}\n\nexport default function Word({ word: w }: IProps) {\n  // const words = useFetch(`http://localhost:3001/words`);\n  const [word, setWords] = useState(w);\n  console.log(word);\n  const [isShow, setIsShow] = useState(false);\n  const [isDone, setIsDone] = useState(word.isDone);\n  const toggleShow = () => {\n    setIsShow(!isShow);\n  };\n  const toggleDone = () => {\n    fetch(`http://localhost:3001/words/${word.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        ...word,\n        isDone: !isDone,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        setIsDone(!isDone);\n      }\n    });\n  };\n  console.log(word);\n\n  const onClickDelete = () => {\n    if (window.confirm(\"삭제 하시겠습니까?\")) {\n      fetch(`http://localhost:3001/words/${word.id}`, {\n        method: \"DELETE\",\n      })\n        .then((res) => {\n          return res.json();\n        })\n        .then((res) => {\n          if (res.ok) {\n            setWords({\n              ...word,\n              id: 0,\n            });\n          }\n        });\n    }\n  };\n\n  if (word.id === 0) {\n    return null;\n  }\n\n  return (\n    <tr className={isDone ? \"off\" : \"\"}>\n      <td>\n        <input type=\"checkbox\" onChange={toggleDone} checked={isDone} />\n      </td>\n      <td>{word.eng}</td>\n      <td>{isShow && word.kor}</td>\n\n      <td>\n        <button onClick={toggleShow}>{isShow ? \"숨기기\" : \"뜻보기\"}</button>\n        <button onClick={onClickDelete} className=\"btn_del\">\n          삭제\n        </button>\n      </td>\n    </tr>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Word, { IWord } from \"./Word\";\nimport useFetch from \"../hooks/useFecth\";\n\nexport default function Day() {\n  const { day } = useParams<{ day: string }>();\n  const words: IWord[] = useFetch(`http://localhost:3001/words?day=${day}`);\n  return (\n    <>\n      <h2>Day {day}</h2>\n      <table>\n        <tbody>\n          {words.map((word) => (\n            <Word word={word} key={word.id} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFecth\";\nimport { IDay } from \"./DayList\";\n\nexport default function CreateWord() {\n  const days: IDay[] = useFetch(\"http://localhost:3001/days\");\n  const [isLoading, setIsLoading] = useState(false);\n  const engRef = useRef<HTMLInputElement>(null);\n  const korRef = useRef<HTMLInputElement>(null);\n  const dayRef = useRef<HTMLSelectElement>(null);\n  const navigate = useNavigate();\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!isLoading && dayRef.current && engRef.current && korRef.current) {\n      setIsLoading(true);\n\n      const day = dayRef.current.value;\n      const eng = engRef.current.value;\n      const kor = korRef.current.value;\n\n      fetch(\"http://localhost:3001/words\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          day,\n          eng,\n          kor,\n          isDone: false,\n        }),\n      }).then((res) => {\n        if (res.ok) {\n          alert(\"생성이 완료 되었습니다.\");\n          navigate(`/day/${day}`);\n          setIsLoading(false);\n        }\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"input_area\">\n        <label>Eng</label>\n        <input type=\"text\" placeholder=\"computer\" ref={engRef} />\n      </div>\n      <div className=\"input_area\">\n        <label>Kor</label>\n        <input type=\"text\" placeholder=\"컴퓨터\" ref={korRef} />\n      </div>\n      <div className=\"input_area\">\n        <label>Day</label>\n        <select ref={dayRef}>\n          {days.map((day) => (\n            <option key={day.id} value={day.day}>\n              {day.day}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button style={{ opacity: isLoading ? 0.3 : 1 }}>\n        {isLoading ? \"Saving\" : \"저장\"}\n      </button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport useFetch from \"../hooks/useFecth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IDay } from \"./DayList\";\n\nexport default function CreateDay() {\n  const days: IDay[] = useFetch(\"http://localhost:3001/days\");\n  const navigate = useNavigate();\n\n  const onClick = () => {\n    fetch(\"http://localhost:3001/days\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        day: days.length + 1,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        alert(\"생성이 완료 되었습니다.\");\n        navigate(`/`);\n      }\n    });\n    console.log(days);\n  };\n\n  return (\n    <div>\n      <h3>현재 일 수 : {days.length}일</h3>\n      <button onClick={onClick}>Day 추가</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function EmptyPage() {\n  return (\n    <>\n      <h2>잘못된 접근입니다.</h2>\n      <Link to=\"/\">돌아가기</Link>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFecth\";\nimport { IDay } from \"./DayList\";\n\nexport default function DeleteDay() {\n  const days: IDay[] = useFetch(\"http://localhost:3001/days\");\n  const navigate = useNavigate();\n\n  const onClickDelete = (day: IDay) => {\n    const selectedDay = days.filter((data) => {\n      return data.id === day.id;\n    });\n\n    fetch(`http://localhost:3001/days/${day.id}`, {\n      method: \"DELETE\",\n      body: JSON.stringify({\n        day: selectedDay,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        alert(\"삭제 완료!\");\n        navigate(`/`);\n      }\n    });\n  };\n\n  return (\n    <>\n      <ul className=\"list_day\">\n        {days.map((day) => (\n          <li key={day.id}>\n            <button\n              style={{ background: \"red\" }}\n              onClick={() => onClickDelete(day)}\n            >\n              Day {day.day}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import React from \"react\";\nimport Header from \"./component/Header\";\nimport DayList from \"./component/DayList\";\nimport Day from \"./component/Day\";\nimport CreateWord from \"./component/CreateWord\";\nimport CreateDay from \"./component/CreateDay\";\nimport EmptyPage from \"./component/EmptyPage\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport DeleteDay from \"./component/DeleteDay\";\nimport \"./App.css\";\n\nfunction VocaApp() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<DayList />} />\n        <Route path=\"/day/:day\" element={<Day />} />\n        <Route path=\"/createWord\" element={<CreateWord />} />\n        <Route path=\"/createDay\" element={<CreateDay />} />\n        <Route path=\"/deleteDay\" element={<DeleteDay />} />\n        <Route path=\"*\" element={<EmptyPage />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default VocaApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport VocaApp from \"./VocaApp\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <VocaApp />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}